{"ast":null,"code":"import _defineProperty from \"/Users/brentonmanks/Documents/GitHub/majorproject-5-wed-1630-4/FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/brentonmanks/Documents/GitHub/majorproject-5-wed-1630-4/FrontEnd/src/components/CustomInput/CustomInput.js\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\"; // @material-ui/icons\n\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"assets/jss/material-kit-pro-react/components/customInputStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  var _classNames, _classNames2, _classNames4;\n\n  var formControlProps = props.formControlProps,\n      labelText = props.labelText,\n      id = props.id,\n      labelProps = props.labelProps,\n      inputProps = props.inputProps,\n      error = props.error,\n      white = props.white,\n      inputRootCustomClasses = props.inputRootCustomClasses,\n      success = props.success;\n  var classes = useStyles();\n  var labelClasses = classNames((_classNames = {}, _defineProperty(_classNames, \" \" + classes.labelRootError, error), _defineProperty(_classNames, \" \" + classes.labelRootSuccess, success && !error), _classNames));\n  var underlineClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.underlineError, error), _defineProperty(_classNames2, classes.underlineSuccess, success && !error), _defineProperty(_classNames2, classes.underline, true), _defineProperty(_classNames2, classes.whiteUnderline, white), _classNames2));\n  var marginTop = classNames(_defineProperty({}, inputRootCustomClasses, inputRootCustomClasses !== undefined));\n  var inputClasses = classNames((_classNames4 = {}, _defineProperty(_classNames4, classes.input, true), _defineProperty(_classNames4, classes.whiteInput, white), _classNames4));\n  var formControlClasses;\n\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(formControlProps.className, classes.formControl);\n  } else {\n    formControlClasses = classes.formControl;\n  }\n\n  var newInputProps = {\n    maxLength: inputProps ? inputProps.maxLength : undefined,\n    minLength: inputProps ? inputProps.minLength : undefined\n  };\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, formControlProps, {\n    className: formControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), labelText !== undefined ? /*#__PURE__*/React.createElement(InputLabel, Object.assign({\n    className: classes.labelRoot + \" \" + labelClasses,\n    htmlFor: id\n  }, labelProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), labelText) : null, /*#__PURE__*/React.createElement(Input, Object.assign({\n    classes: {\n      input: inputClasses,\n      root: marginTop,\n      disabled: classes.disabled,\n      underline: underlineClasses\n    },\n    id: id\n  }, inputProps, {\n    inputProps: newInputProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  })), error ? /*#__PURE__*/React.createElement(Clear, {\n    className: classes.feedback + \" \" + classes.labelRootError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }) : success ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.feedback + \" \" + classes.labelRootSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }) : null);\n}\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/brentonmanks/Documents/GitHub/majorproject-5-wed-1630-4/FrontEnd/src/components/CustomInput/CustomInput.js"],"names":["React","PropTypes","classNames","makeStyles","FormControl","InputLabel","Input","Clear","Check","styles","useStyles","CustomInput","props","formControlProps","labelText","id","labelProps","inputProps","error","white","inputRootCustomClasses","success","classes","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","whiteUnderline","marginTop","undefined","inputClasses","input","whiteInput","formControlClasses","className","formControl","newInputProps","maxLength","minLength","labelRoot","root","disabled","feedback","propTypes","node","object","string","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,kEAAnB;AAEA,IAAMC,SAAS,GAAGP,UAAU,CAACM,MAAD,CAA5B;AAEA,eAAe,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA,MAEvCC,gBAFuC,GAWrCD,KAXqC,CAEvCC,gBAFuC;AAAA,MAGvCC,SAHuC,GAWrCF,KAXqC,CAGvCE,SAHuC;AAAA,MAIvCC,EAJuC,GAWrCH,KAXqC,CAIvCG,EAJuC;AAAA,MAKvCC,UALuC,GAWrCJ,KAXqC,CAKvCI,UALuC;AAAA,MAMvCC,UANuC,GAWrCL,KAXqC,CAMvCK,UANuC;AAAA,MAOvCC,KAPuC,GAWrCN,KAXqC,CAOvCM,KAPuC;AAAA,MAQvCC,KARuC,GAWrCP,KAXqC,CAQvCO,KARuC;AAAA,MASvCC,sBATuC,GAWrCR,KAXqC,CASvCQ,sBATuC;AAAA,MAUvCC,OAVuC,GAWrCT,KAXqC,CAUvCS,OAVuC;AAYzC,MAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,MAAMa,YAAY,GAAGrB,UAAU,iDAC5B,MAAMoB,OAAO,CAACE,cADc,EACGN,KADH,gCAE5B,MAAMI,OAAO,CAACG,gBAFc,EAEKJ,OAAO,IAAI,CAACH,KAFjB,gBAA/B;AAIA,MAAMQ,gBAAgB,GAAGxB,UAAU,mDAChCoB,OAAO,CAACK,cADwB,EACPT,KADO,iCAEhCI,OAAO,CAACM,gBAFwB,EAELP,OAAO,IAAI,CAACH,KAFP,iCAGhCI,OAAO,CAACO,SAHwB,EAGZ,IAHY,iCAIhCP,OAAO,CAACQ,cAJwB,EAIPX,KAJO,iBAAnC;AAMA,MAAMY,SAAS,GAAG7B,UAAU,qBACzBkB,sBADyB,EACAA,sBAAsB,KAAKY,SAD3B,EAA5B;AAGA,MAAMC,YAAY,GAAG/B,UAAU,mDAC5BoB,OAAO,CAACY,KADoB,EACZ,IADY,iCAE5BZ,OAAO,CAACa,UAFoB,EAEPhB,KAFO,iBAA/B;AAIA,MAAIiB,kBAAJ;;AACA,MAAIvB,gBAAgB,KAAKmB,SAAzB,EAAoC;AAClCI,IAAAA,kBAAkB,GAAGlC,UAAU,CAC7BW,gBAAgB,CAACwB,SADY,EAE7Bf,OAAO,CAACgB,WAFqB,CAA/B;AAID,GALD,MAKO;AACLF,IAAAA,kBAAkB,GAAGd,OAAO,CAACgB,WAA7B;AACD;;AACD,MAAIC,aAAa,GAAG;AAClBC,IAAAA,SAAS,EAAEvB,UAAU,GAAGA,UAAU,CAACuB,SAAd,GAAwBR,SAD3B;AAElBS,IAAAA,SAAS,EAAExB,UAAU,GAAGA,UAAU,CAACwB,SAAd,GAAwBT;AAF3B,GAApB;AAIA,sBACE,oBAAC,WAAD,oBAAiBnB,gBAAjB;AAAmC,IAAA,SAAS,EAAEuB,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGtB,SAAS,KAAKkB,SAAd,gBACC,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEV,OAAO,CAACoB,SAAR,GAAoB,GAApB,GAA0BnB,YADvC;AAEE,IAAA,OAAO,EAAER;AAFX,KAGMC,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGF,SALH,CADD,GAQG,IATN,eAUE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPoB,MAAAA,KAAK,EAAED,YADA;AAEPU,MAAAA,IAAI,EAAEZ,SAFC;AAGPa,MAAAA,QAAQ,EAAEtB,OAAO,CAACsB,QAHX;AAIPf,MAAAA,SAAS,EAAEH;AAJJ,KADX;AAOE,IAAA,EAAE,EAAEX;AAPN,KAQME,UARN;AASE,IAAA,UAAU,EAAEsB,aATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVF,EAqBGrB,KAAK,gBACJ,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEI,OAAO,CAACuB,QAAR,GAAmB,GAAnB,GAAyBvB,OAAO,CAACE,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAEFH,OAAO,gBACT,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,OAAO,CAACuB,QAAR,GAAmB,GAAnB,GAAyBvB,OAAO,CAACG,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAEP,IAzBN,CADF;AA6BD;AAEDd,WAAW,CAACmC,SAAZ,GAAwB;AACtBhC,EAAAA,SAAS,EAAEb,SAAS,CAAC8C,IADC;AAEtB/B,EAAAA,UAAU,EAAEf,SAAS,CAAC+C,MAFA;AAGtBjC,EAAAA,EAAE,EAAEd,SAAS,CAACgD,MAHQ;AAItBhC,EAAAA,UAAU,EAAEhB,SAAS,CAAC+C,MAJA;AAKtBnC,EAAAA,gBAAgB,EAAEZ,SAAS,CAAC+C,MALN;AAMtB5B,EAAAA,sBAAsB,EAAEnB,SAAS,CAACgD,MANZ;AAOtB/B,EAAAA,KAAK,EAAEjB,SAAS,CAACiD,IAPK;AAQtB7B,EAAAA,OAAO,EAAEpB,SAAS,CAACiD,IARG;AAStB/B,EAAAA,KAAK,EAAElB,SAAS,CAACiD;AATK,CAAxB","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n// @material-ui/icons\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\n\nimport styles from \"assets/jss/material-kit-pro-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    white,\n    inputRootCustomClasses,\n    success\n  } = props;\n  const classes = useStyles();\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n    [classes.whiteUnderline]: white\n  });\n  const marginTop = classNames({\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\n  });\n  const inputClasses = classNames({\n    [classes.input]: true,\n    [classes.whiteInput]: white\n  });\n  var formControlClasses;\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(\n      formControlProps.className,\n      classes.formControl\n    );\n  } else {\n    formControlClasses = classes.formControl;\n  }\n  let newInputProps = {\n    maxLength: inputProps ? inputProps.maxLength:undefined,\n    minLength: inputProps ? inputProps.minLength:undefined\n  };\n  return (\n    <FormControl {...formControlProps} className={formControlClasses}>\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + \" \" + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        classes={{\n          input: inputClasses,\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        {...inputProps}\n        inputProps={newInputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}