{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = isBase32;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar base32 = /^[A-Z2-7]+=*$/;\n\nfunction isBase32(str) {\n  (0, _assertString[\"default\"])(str);\n  var len = str.length;\n\n  if (len > 0 && len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = exports[\"default\"];\nmodule.exports[\"default\"] = exports[\"default\"];","map":{"version":3,"sources":["/Users/brentonmanks/Documents/GitHub/majorproject-5-wed-1630-4/FrontEnd/node_modules/validator/lib/isBase32.js"],"names":["Object","defineProperty","exports","value","isBase32","_assertString","_interopRequireDefault","require","obj","__esModule","base32","str","len","length","test","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,WAAP,GAAkBE,QAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAASA;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,MAAM,GAAG,eAAb;;AAEA,SAASN,QAAT,CAAkBO,GAAlB,EAAuB;AACrB,GAAC,GAAGN,aAAa,WAAjB,EAA2BM,GAA3B;AACA,MAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;;AAEA,MAAID,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,CAAN,KAAY,CAAvB,IAA4BF,MAAM,CAACI,IAAP,CAAYH,GAAZ,CAAhC,EAAkD;AAChD,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAEDI,MAAM,CAACb,OAAP,GAAiBA,OAAO,WAAxB;AACAa,MAAM,CAACb,OAAP,cAAyBA,OAAO,WAAhC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase32;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar base32 = /^[A-Z2-7]+=*$/;\n\nfunction isBase32(str) {\n  (0, _assertString.default)(str);\n  var len = str.length;\n\n  if (len > 0 && len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}